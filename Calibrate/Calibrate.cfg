################################################
###### STANDARD INPUT_SHAPER CALIBRATIONS ######
################################################
# Written by Frix_x#0161 #
# @version: 1.1

# CHANGELOG:
#   v1.1: added M400 to validate that the files are correctly saved to disk
#   v1.0: first version of the automatic input shaper workflow

# -------------------------------------------------------------------------------------------------------------------------
# If you want to use it into your own config, please install it as a standalone macro as described in the
# installation section of this file: doc > features > is_workflow.md
# -------------------------------------------------------------------------------------------------------------------------

### What is it ? ###
# This macro helps you to configure the input shaper algorithm of Klipper by running the tests sequencially and calling an automatic script
# that generate the graphs, manage the files and so on. It's basically a fully automatic input shaper calibration workflow.
# Results can be found in your config folder using FLuidd/Maisail file manager.

# The goal is to make it easy to set, share and use it.

# Usage:
#   1. Call the AXES_SHAPER_CALIBRATION macro, wait for it to end and compute the graphs. Then look for the results in the results folder.
#   2. Call the BELTS_SHAPER_CALIBRATION macro, wait for it to end and compute the graphs. Then look for the results in the results folder.


[gcode_macro AXES_SHAPER_CALIBRATION]
description: Run standard input shaper test for all axes
gcode:
    CG28
    {% set verbose = params.VERBOSE|default(true) %}

    TEST_RESONANCES AXIS=X
    M400
    TEST_RESONANCES AXIS=Y
    M400

    {% if verbose %}
        RESPOND MSG="Graphs generation... Please wait a minute or two and look in the configured folder."
    {% endif %}
    RUN_SHELL_COMMAND CMD=plot_graph PARAMS=SHAPER
## -//-



[gcode_macro BELTS_SHAPER_CALIBRATION]
description: Run custom demi-axe test to analyze belts on CoreXY printers
gcode:
    CG28
    {% set verbose = params.VERBOSE|default(true) %}
    
    TEST_RESONANCES AXIS=1,1 OUTPUT=raw_data NAME=b
    M400
    TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=a
    M400

    {% if verbose %}
        RESPOND MSG="Graphs generation... Please wait a minute or two and look in the configured folder."
    {% endif %}
    RUN_SHELL_COMMAND CMD=plot_graph PARAMS=BELTS
## -//-


[gcode_macro EXCITATE_AXIS_AT_FREQ]
description: Maintain a specified input shaper excitating frequency for some time to diagnose vibrations
gcode:
    CG28
    {% set FREQUENCY = params.FREQUENCY|default(25)|int %}
    {% set TIME = params.TIME|default(10)|int %}
    {% set AXIS = params.AXIS|default("x")|string|lower %}

    TEST_RESONANCES OUTPUT=raw_data AXIS={AXIS} FREQ_START={FREQUENCY-1} FREQ_END={FREQUENCY+1} HZ_PER_SEC={1/(TIME/3)}
    M400
## -//-

## -- Belt Tenison
[gcode_macro XYBelt_Tension]
description: A macro that assists with repeatable belt tensioning.
variable_y_tensioning_position: 115       #Position the printhead needs to be to have 150mm of belt length exposed for belt tensioning.
gcode:
    {% set x_max = printer.configfile.settings.stepper_x.position_max %}
    {% set travel_speed = printer.configfile.settings.printer.max_velocity %}
    G0 X{x_max/2} Y{y_tensioning_position} F{travel_speed*60}
    { action_respond_info( "Tension A/B belts to 110hz @ X: {}, Y: {}".format(x_max/2, y_tensioning_position) ) }
## -//-